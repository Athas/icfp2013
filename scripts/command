#!/usr/bin/env python

import os.path
import sys
import json
import time
from logging import info, warning, error

import lib.api as api
import lib.command as cmd


def print_help():
    print '''usage: %s COMMAND [ARGS]

Your auth key must reside in the 'authkey' file.

Commands:
  solve ID [SOLVER..]
  solvetrain ID [SOLVER..]
  datah ID

SOLVER is one of:
%s

if no SOLVER is given, all SOLVERs are used.

Returns 0 on success and 1 otherwise.\
e''' % (sys.argv[0], '\n'.join(map(lambda s: '  ' + s, cmd.solvers.keys())))

def check_for_solvers(xs):
    if not xs:
        return cmd.solvers.keys()
    return xs
    
def run_main():
    if os.path.exists('stop'):
        sys.exit(2)
    auth = api.get_authkey()
    if auth is None:
        print_help()
        return

    try:
        args = sys.argv[2:]
        try:
            (min_args, f) = {
                'solvetrain': (1, lambda: cmd.solve(auth, 'data/missing_problems_training',
                                                    'data/myproblems_training.json', args[0], check_for_solvers(args[1:]))),
                'solve': (1, lambda: cmd.solve(auth, 'data/missing_problems',
                                               'data/myproblems.json', args[0], check_for_solvers(args[1:]))),
                'datah': (1, lambda: cmd.generate_datah_from_id(args[0])),
            }[sys.argv[1]]
        except KeyError:
            raise IndexError
        if min_args > len(args):
            raise IndexError
    except IndexError:
        print_help()
        return

    f()
    sys.exit(cmd.get_exit_code())

if __name__ == '__main__':
    run_main()
